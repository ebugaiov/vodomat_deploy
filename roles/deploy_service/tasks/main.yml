---
- name: Create requirements for all services
  block:
    - name: Create docker network for all services
      community.docker.docker_network:
        name: "{{ server_network_name }}"

    - name: Run redis container
      community.docker.docker_container:
        name: redis
        image: redis:latest
        networks:
          - name: "{{ server_network_name }}"

- name: "[{{ service_name }}] Clone repo"
  block:
    - name: Copy ssh-key
      ansible.builtin.copy:
        src: "~/.ssh/id_rsa"
        dest: "/home/{{ sudo_user }}/.ssh/id_rsa"
        mode: "0600"

    - name: Clone github repo
      ansible.builtin.git:
        repo: "{{ github_url_base }}/{{ service_name }}.git"
        accept_newhostkey: true
        dest: "{{ build_temp_folder }}"
      register: git_result

    - name: Remove ssh-key
      ansible.builtin.file:
        state: absent
        path: "/home/{{ sudo_user }}/.ssh/id_rsa"

- name: "[{{ service_name }}] Save tag for image"
  ansible.builtin.set_fact:
    "{{ service_name }}_image_tag": "{{ git_result.after[:6] }}"
    cacheable: true

- name: "[{{ service_name }}] Build service image"
  block:
    - name: Build image
      community.docker.docker_image:
        name: "{{ service_name }}"
        tag: "{{ vars[service_name + '_image_tag'] }}"
        build:
          path: "{{ build_temp_folder }}"
        source: build

    - name: Remove temp folder for build
      ansible.builtin.file:
        state: absent
        path: "{{ build_temp_folder }}"

- name: "[{{ service_name }}] Run service container(s)"
  block:
    - name: Create env file on the server
      ansible.builtin.template:
        src: "../services/{{ service_name }}/.env.j2"
        dest: "{{ path_to_env_file }}"
        mode: "0644"

    - name: Run container
      ansible.builtin.include_tasks: "../services/{{ service_name }}/service.yml"

    - name: Delete env file from the server
      ansible.builtin.file:
        state: absent
        path: "{{ path_to_env_file }}"